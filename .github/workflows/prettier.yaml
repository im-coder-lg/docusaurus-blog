name: Prettier everywhere

on:
  schedule:
    - cron: 30 05 15 * *
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
          # This is important to fetch the changes to the previous commit
          fetch-depth: 0
          repo-token: ${{ secrets.PAT_GITHUB_TOKEN }}
        if: success()
      - name: Git Pull everything
        run: |
          git fetch
          git pull
        if: success()
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
        if: success()
      - name: Code Formatting (website)
        run: |
          npm i -g prettier
          npx prettier --write . 
      - name: Inspect for Prettier
        run: |
          npm install
          npx prettier --check --ignore src/css/fonts
        if: success()
      - uses: EndBug/add-and-commit@v9 # You can change this to use a specific version.
        with:
          # The arguments for the `git add` command (see the paragraph below for more info)
          # Default: '.'
          add: '.'

          # The name of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_name: im-coder-lg (LG)

          # The email of the user that will be displayed as the author of the commit.
          # Default: depends on the default_author input
          author_email: ${{secrets.GIT_AUTHOR_EMAIL}}

          # Additional arguments for the git commit command. The --message argument is already set by the message input.
          # Default: ''
          commit: --signoff

          # The name of the custom committer you want to use, if different from the author of the commit.
          # Default: the name of the author (set with either author_name or default_author)
          committer_name: GitHub Actions

          # The email of the custom committer you want to use, if different from the author of the commit.
          # Default: the email of the author (set with either author_email or default_author)
          committer_email: actions@github.com

          # The local path to the directory where your repository is located. You should use actions/checkout first to set it up.
          # Default: '.'

          # Determines the way the action fills missing author name and email. Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          default_author: github_actions

          # The message for the commit.
          # Default: 'Commit from GitHub Actions (name of the workflow)'
          message: 'style: Code Formatting job'

          # If this input is set, the action will push the commit to a new branch with this name.
          # Default: '"

          # The way the action should handle pathspec errors from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away, and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: ignore

          # Arguments for the git pull command. By default, the action does not pull.
          # Default: ''
          pull: '--rebase --autostash ...'

          # Whether to push the commit and, if any, its tags to the repo. It can also be used to set the git push arguments (see the paragraph below for more info)
          # Default: true
          push: false

          # The arguments for the `git rm` command (see the paragraph below for more info)
          # Default: ''

          # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
          # Default: ''

          # Arguments for the git push --tags command (any additional argument will be added after --tags)
          # Default: ''
          tag_push: '--force'
      - name: Final thing
        run: |
          echo "Prettified code ✨"
          curl \
            -H "Title: Prettie workflow success"
            -H "Priority: urgent" \
            -d "Prettier workflow job completed successfully for im-coder-lg/docusaurus-blog ✨" \
            ${NTFY-URI}
        
        env:
          NTFY-URI: ${{secrets.NTFY_URI}}
